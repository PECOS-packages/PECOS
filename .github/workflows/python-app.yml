name: Python application

on:
  push:
    branches:
      - master
      - development
    tags:
      - "*"
  pull_request:
    branches:
      - master
      - development

permissions:
  contents: read

jobs:

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ x86_64, x86, aarch64, armv7, s390x, ppc64le ]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install -r python/requirements.txt
      - name: Pre-commit checks
        run: |
          python -m pip install pre-commit
          pre-commit run --all-files

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path ./python/Cargo.toml
          sccache: 'true'
          manylinux: auto

      - name: Test with pytest
        run: |
          pip install pytest-cov
          maturin develop -m python/Cargo.toml
          pytest python/tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
      - name: Test optional dependencies with pytest
        run: |
          pip install pytest-cov
          maturin develop -E=all -m python/Cargo.toml
          pytest python/tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html -m optional_dependency

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [ x64, x86 ]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install -r python/requirements.txt
      - name: Pre-commit checks
        run: |
          python -m pip install pre-commit
          pre-commit run --all-files

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path ./python/Cargo.toml
          sccache: 'true'

      - name: Test with pytest
        run: |
          pip install pytest-cov
          maturin develop -m python/Cargo.toml
          pytest python/tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
      - name: Test optional dependencies with pytest
        run: |
          pip install pytest-cov
          maturin develop -E=all -m python/Cargo.toml
          pytest python/tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html -m optional_dependency

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [ x86_64, aarch64 ]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
        name: Set up Python ${{ matrix.python-version }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install -r python/requirements.txt
      - name: Pre-commit checks
        run: |
          python -m pip install pre-commit
          pre-commit run --all-files

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path ./python/Cargo.toml
          sccache: 'true'

      - name: Test with pytest
        run: |
          pip install pytest-cov
          maturin develop -m python/Cargo.toml
          pytest python/tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
      - name: Test optional dependencies with pytest
        run: |
          pip install pytest-cov
          maturin develop -E=all -m python/Cargo.toml
          pytest python/tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html -m optional_dependency

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path ./python/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

#  release:
#    name: Release
#    runs-on: ubuntu-latest
#    if: "startsWith(github.ref, 'refs/tags/')"
#    needs: [linux, windows, macos, sdist]
#    steps:
#      - uses: actions/download-artifact@v3
#        with:
#          name: wheels
#      - name: Publish to PyPI
#        uses: PyO3/maturin-action@v1
#        env:
#          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
#        with:
#          command: upload
#          args: --non-interactive --skip-existing *
