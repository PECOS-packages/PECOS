name: Python application

on:
  push:
    branches:
      - master
      - development
    tags:
      - "*"
  pull_request:
    branches:
      - master
      - development

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup pre-commit
        run: |
          python -m pip install pre-commit
          pre-commit install
      - name: Run pre-commit on all files
        run: pre-commit run --all-files
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path ./python/Cargo.toml
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  # Repeat the pre-commit setup and run steps for each platform (windows, macos) just like the linux job above.
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}
      - name: Setup pre-commit
        run: |
          python -m pip install pre-commit
          pre-commit install
      - name: Run pre-commit on all files
        run: pre-commit run --all-files
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path ./python/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup pre-commit
        run: |
          python -m pip install pre-commit
          pre-commit install
      - name: Run pre-commit on all files
        run: pre-commit run --all-files
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path ./python/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Setup pre-commit
        run: |
          python -m pip install pre-commit
          pre-commit install
      - name: Run pre-commit on all files
        run: pre-commit run --all-files
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path ./python/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
