name: Python application

on:
  push:
    branches:
      - master
      - development
    tags:
      - "*"
  pull_request:
    branches:
      - master
      - development

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64,
                 armv7, s390x, ppc64le
        ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path ./python/Cargo.toml
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
      - name: List built wheels
        run: ls -l dist/
      - name: pytest
        if: ${{ startsWith(matrix.target, 'x86_64') }}
        shell: bash
        run: |
          pip install --upgrade pip
          set -e
          PYTHON_VER=$(python -c "import sys; print(''.join(map(str, sys.version_info[:2])))")
          WHEEL_FILE=$(ls dist/quantum_pecos-*-cp${PYTHON_VER}-*.whl)
          pip install "${WHEEL_FILE}" --force-reinstall
          # pip install quantum-pecos --find-links dist --force-reinstall
          pip list
          pip install pytest
          cd ./python && pytest
      - name: pytest for cross-architecture
        if: ${{ !startsWith(matrix.target, 'x86') && matrix.target != 'ppc64' }}
        uses: uraimo/run-on-arch-action@v2.7.1
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends build-essential python3 python3-pip cmake
            pip3 install -U pip pytest
          run: |
            set -e
            PYTHON_VER=$(python3 -c "import sys; print(''.join(map(str, sys.version_info[:2])))")
            WHEEL_FILE=$(ls dist/quantum_pecos-*-cp${PYTHON_VER}-*.whl)
            pip3 install "${WHEEL_FILE}" --force-reinstall --only-binary :all:
            cd ./python && python3 -m pytest



  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.10', ]
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}
      - name: Setup pre-commit
        run: |
          python -m pip install pre-commit
          pre-commit install
      - name: Run pre-commit on all files
        run: pre-commit run --all-files
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path ./python/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['3.10', ]
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup pre-commit
        run: |
          python -m pip install pre-commit
          pre-commit install
      - name: Run pre-commit on all files
        run: pre-commit run --all-files
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --manifest-path ./python/Cargo.toml
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Setup pre-commit
        run: |
          python -m pip install pre-commit
          pre-commit install
      - name: Run pre-commit on all files
        run: pre-commit run --all-files
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist --manifest-path ./python/Cargo.toml
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
